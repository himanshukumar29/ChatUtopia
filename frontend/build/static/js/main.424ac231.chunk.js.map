{"version":3,"sources":["Context/ChatProvider.js","components/Authentication/Login.js","components/Authentication/Signup.js","components/layout/HeaderAuth.js","components/layout/FooterAuth.js","Pages/Homepage.js","components/SingleChat.js","config/ChatLogics.js","components/miscellaneous/ProfileModal.js","components/ScrollableChat.js","components/userAvatar/UserBadgeItem.js","components/userAvatar/UserListItem.js","components/miscellaneous/UpdateGroupChatModal.js","components/Chatbox.js","components/ChatLoading.js","components/miscellaneous/GroupChatModal.js","components/MyChats.js","components/miscellaneous/SideDrawer.js","Pages/Chatpage.js","App.js","index.js"],"names":["ChatContext","createContext","ChatState","useContext","ChatProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","selectedChat","setSelectedChat","_useState3","_useState4","user","setUser","_useState5","_useState6","notification","setNotification","_useState7","_useState8","chats","setChats","history","useHistory","useEffect","userInfo","JSON","parse","localStorage","getItem","push","_jsx","Provider","value","Login","show","setShow","toast","useToast","email","setEmail","password","setPassword","loading","setLoading","submitHandler","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","_yield$axios$post","data","wrap","_context","prev","next","title","status","duration","isClosable","position","abrupt","headers","axios","post","sent","setItem","stringify","t0","description","response","message","stop","apply","arguments","_jsxs","VStack","spacing","FormControl","id","isRequired","FormLabel","Input","borderColor","boxShadow","type","placeholder","onChange","e","target","InputGroup","size","InputRightElement","width","Button","h","onClick","bgColor","textColor","style","marginTop","isLoading","_hover","background","color","Signup","handleClick","name","setName","confirmpassword","setConfirmpassword","_useState9","_useState10","_useState11","_useState12","pic","setPic","_useState13","_useState14","picLoading","setPicLoading","console","log","p","accept","pics","undefined","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","postDetails","files","HeaderAuth","_Fragment","Box","fontWeight","px","Flex","alignItems","justifyContent","HStack","FooterAuth","pos","bottom","Container","as","Stack","maxW","py","direction","base","md","justify","align","Text","Homepage","socket","selectedChatCompare","centerContent","d","w","m","borderRadius","borderWidth","fontSize","fontFamily","bg","Tabs","isFitted","variant","colorScheme","TabList","mb","Tab","TabPanels","TabPanel","isSameSenderMargin","messages","i","userId","length","sender","_id","isSameSender","isLastMessage","isSameUser","getSender","loggedUser","users","_users$","ProfileModal","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","IconButton","icon","ViewIcon","Modal","isCentered","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","flexDir","Image","boxSize","src","alt","ModalFooter","ScrollableChat","ScrollableFeed","map","display","Tooltip","label","placement","hasArrow","Avatar","mt","mr","cursor","backgroundColor","concat","marginLeft","padding","maxWidth","content","UserBadgeItem","handleFunction","admin","Badge","CloseIcon","pl","UserListItem","UpdateGroupChatModal","fetchMessages","fetchAgain","setFetchAgain","groupChatName","setGroupChatName","search","setSearch","searchResult","setSearchResult","renameloading","setRenameLoading","_ChatState","handleSearch","_ref2","query","_yield$axios$get","Authorization","token","get","_x","handleRename","_ref3","_callee2","_yield$axios$put","_context2","put","chatId","chatName","handleAddUser","_ref4","_callee3","user1","_yield$axios$put2","_context3","find","u","groupAdmin","_x2","handleRemove","_ref5","_callee4","_yield$axios$put3","_context4","_x3","flexWrap","pb","ml","Spinner","SingleChat","setMessages","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","emit","sendMessage","event","key","_toConsumableArray","io","on","newMessageRecieved","chat","includes","ArrowBackIcon","isGroupChat","toUpperCase","overflowY","alignSelf","margin","className","onKeyDown","Lottie","options","marginBottom","lastTypingTime","Date","getTime","setTimeout","Chatbox","ChatLoading","Skeleton","height","GroupChatModal","selectedUsers","setSelectedUsers","handleSubmit","delUser","filter","sel","slice","userToAdd","MyChats","setLoggedUser","fetchChats","lg","rightIcon","AddIcon","latestMessage","substring","SideDrawer","loadingChat","setLoadingChat","accessChat","c","Menu","MenuButton","NotificationBadge","count","effect","Effect","SCALE","BellIcon","MenuList","notif","MenuItem","n","ChevronDownIcon","MenuDivider","removeItem","Drawer","DrawerOverlay","DrawerContent","DrawerHeader","borderBottomWidth","DrawerBody","Chatpage","App","Route","path","component","exact","ReactDOM","render","ChakraProvider","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.424ac231.chunk.js","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ChatContext = createContext();\r\n\r\nconst ChatProvider = ({ children }) => {\r\n  const [selectedChat, setSelectedChat] = useState();\r\n  const [user, setUser] = useState();\r\n  const [notification, setNotification] = useState([]);\r\n  const [chats, setChats] = useState();\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    setUser(userInfo);\r\n\r\n    if (!userInfo) history.push(\"/\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [history]);\r\n\r\n  return (\r\n    <ChatContext.Provider\r\n      value={{\r\n        selectedChat,\r\n        setSelectedChat,\r\n        user,\r\n        setUser,\r\n        notification,\r\n        setNotification,\r\n        chats,\r\n        setChats,\r\n      }}\r\n    >\r\n      {children}\r\n    </ChatContext.Provider>\r\n  );\r\n};\r\n\r\nexport const ChatState = () => {\r\n  return useContext(ChatContext);\r\n};\r\n\r\nexport default ChatProvider;\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\r\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\r\nimport { VStack } from \"@chakra-ui/layout\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\n\r\nconst Login = () => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClick = () => setShow(!show);\r\n  const toast = useToast();\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const history = useHistory();\r\n  const { setUser } = ChatState();\r\n\r\n  const submitHandler = async () => {\r\n    setLoading(true);\r\n    if (!email || !password) {\r\n      toast({\r\n        title: \"Please Fill all the Feilds\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"/api/user/login\",\r\n        { email, password },\r\n        config\r\n      );\r\n\r\n      toast({\r\n        title: \"Login Successful\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n      setUser(data);\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setLoading(false);\r\n      history.push(\"/chats\");\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"10px\">\r\n      <FormControl id=\"email\" isRequired>\r\n        <FormLabel>Email Address</FormLabel>\r\n        <Input\r\n          borderColor='black' boxShadow='dark-lg'\r\n          value={email}\r\n          type=\"email\"\r\n          placeholder=\"Enter Your Email Address\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Password</FormLabel>\r\n        <InputGroup size=\"md\">\r\n          <Input\r\n            borderColor='black' boxShadow='dark-lg'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Enter password\"\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      <Button\r\n        bgColor={'black'} textColor={'white'}\r\n        width=\"100%\"\r\n        style={{ marginTop: 15 }}\r\n        onClick={submitHandler}\r\n        isLoading={loading}\r\n        _hover={{\r\n          width: \"95%\",\r\n          background: \"white\",\r\n          color: \"Black\",\r\n          borderColor: 'black', boxShadow: 'dark-lg',\r\n        }}\r\n      >\r\n        Login\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\r\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\r\nimport { VStack } from \"@chakra-ui/layout\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Signup = () => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClick = () => setShow(!show);\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n\r\n  const [name, setName] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [confirmpassword, setConfirmpassword] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [pic, setPic] = useState();\r\n  const [picLoading, setPicLoading] = useState(false);\r\n\r\n  const submitHandler = async () => {\r\n    setPicLoading(true);\r\n    if (!name || !email || !password || !confirmpassword) {\r\n      toast({\r\n        title: \"Please Fill all the Feilds\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n      return;\r\n    }\r\n    if (password !== confirmpassword) {\r\n      toast({\r\n        title: \"Passwords Do Not Match\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n    console.log(name, email, password, pic);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        \"/api/user\",\r\n        {\r\n          name,\r\n          email,\r\n          password,\r\n          pic,\r\n        },\r\n        config\r\n      );\r\n      console.log(data);\r\n      toast({\r\n        title: \"Registration Successful\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setPicLoading(false);\r\n      history.push(\"/chats\");\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n    }\r\n  };\r\n\r\n  const postDetails = (pics) => {\r\n    setPicLoading(true);\r\n    if (pics === undefined) {\r\n      toast({\r\n        title: \"Please Select an Image!\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n    console.log(pics);\r\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n      const data = new FormData();\r\n      data.append(\"file\", pics);\r\n      data.append(\"upload_preset\", \"chat-app\");\r\n      data.append(\"cloud_name\", \"piyushproj\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/piyushproj/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setPic(data.url.toString());\r\n          console.log(data.url.toString());\r\n          setPicLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setPicLoading(false);\r\n        });\r\n    } else {\r\n      toast({\r\n        title: \"Please Select an Image!\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n      setPicLoading(false);\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"5px\">\r\n      <FormControl id=\"first-name\" isRequired>\r\n        <FormLabel>Name</FormLabel>\r\n        <Input\r\n          borderColor='black' boxShadow='dark-lg'\r\n          placeholder=\"Enter Your Name\"\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"email\" isRequired>\r\n        <FormLabel>Email Address</FormLabel>\r\n        <Input\r\n          borderColor='black' boxShadow='dark-lg'\r\n          type=\"email\"\r\n          placeholder=\"Enter Your Email Address\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Password</FormLabel>\r\n        <InputGroup size=\"md\">\r\n          <Input\r\n            borderColor='black' boxShadow='dark-lg'\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Enter Password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Confirm Password</FormLabel>\r\n        <InputGroup size=\"md\">\r\n          <Input\r\n            borderColor='black' boxShadow='dark-lg'\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Confirm password\"\r\n            onChange={(e) => setConfirmpassword(e.target.value)}\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      <FormControl id=\"pic\">\r\n        <FormLabel>Upload your Picture</FormLabel>\r\n        <Input\r\n          borderColor='black' boxShadow='dark-lg'\r\n          type=\"file\"\r\n          p={1.5}\r\n          accept=\"image/*\"\r\n          onChange={(e) => postDetails(e.target.files[0])}\r\n        />\r\n      </FormControl>\r\n      <Button\r\n        bgColor={'black'} textColor={'white'}\r\n        width=\"100%\"\r\n        style={{ marginTop: 15 }}\r\n        onClick={submitHandler}\r\n        isLoading={picLoading}\r\n        _hover={{\r\n          width: \"95%\",\r\n          background: \"white\",\r\n          color: \"Black\",\r\n          borderColor: 'black', boxShadow: 'dark-lg',\r\n        }}\r\n      >\r\n        Sign Up\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import {\r\n    Box,\r\n    Flex,\r\n    HStack,\r\n} from '@chakra-ui/react'\r\n\r\nexport default function HeaderAuth() {\r\n    return (\r\n        <>\r\n            <Box bgColor={'black'} textColor={'white'} fontWeight={'bold'} px={4}>\r\n                <Flex h={16} alignItems={'center'} justifyContent={'space-between'}>\r\n                    <HStack spacing={8} alignItems={'center'}>\r\n                        <Box>ChatUtopia</Box>\r\n                    </HStack>\r\n                </Flex>\r\n            </Box>\r\n        </>\r\n    )\r\n}","import {\r\n    Box,\r\n    Container,\r\n    Stack,\r\n    Text,\r\n} from '@chakra-ui/react'\r\n\r\nexport default function FooterAuth() {\r\n    return (\r\n        <Box\r\n            pos=\"relative\" bottom=\"-200\" \r\n            bgColor={'black'} textColor={'white'}>\r\n            <Container\r\n                as={Stack}\r\n                maxW={'6xl'}\r\n                py={4}\r\n                direction={{ base: 'column', md: 'row' }}\r\n                spacing={4}\r\n                justify={{ base: 'center', md: 'space-between' }}\r\n                align={{ base: 'center', md: 'center' }}>\r\n                <Text>© 2023 ChatUtopia</Text>\r\n            </Container>\r\n        </Box>\r\n    )\r\n}","import {\r\n  Box,\r\n  Container,\r\n  Tab,\r\n  TabList,\r\n  TabPanel,\r\n  TabPanels,\r\n  Tabs,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport Login from \"../components/Authentication/Login\";\r\nimport Signup from \"../components/Authentication/Signup\";\r\nimport HeaderAuth from '../components/layout/HeaderAuth.js'\r\nimport FooterAuth from '../components/layout/FooterAuth'\r\n\r\nfunction Homepage() {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n\r\n    if (user) history.push(\"/chats\");\r\n  }, [history]);\r\n\r\n  return (\r\n    <>\r\n      <HeaderAuth />\r\n      <Container maxW=\"xl\" centerContent>\r\n        <Box\r\n          d=\"flex\"\r\n          justifyContent=\"center\"\r\n          p={3}\r\n          bgColor={'black'} textColor={'white'}\r\n          w=\"100%\"\r\n          m=\"40px 0 15px 0\"\r\n          borderRadius=\"lg\"\r\n          borderWidth=\"1px\"\r\n        >\r\n          <Text fontSize=\"4xl\" fontFamily=\"Work sans\">\r\n            Elevate your social life !\r\n          </Text>\r\n        </Box>\r\n        <Box bg=\"white\" borderColor='black' boxShadow='dark-lg' w=\"100%\" p={4} borderRadius=\"lg\" borderWidth=\"1px\">\r\n          <Tabs isFitted variant=\"soft-rounded\"\r\n            colorScheme=\"black\">\r\n            <TabList mb=\"1em\" >\r\n              <Tab >Login</Tab>\r\n              <Tab>Sign Up</Tab>\r\n            </TabList>\r\n            <TabPanels>\r\n              <TabPanel>\r\n                <Login />\r\n              </TabPanel>\r\n              <TabPanel>\r\n                <Signup />\r\n              </TabPanel>\r\n            </TabPanels>\r\n          </Tabs>\r\n        </Box>\r\n      </Container>\r\n      <FooterAuth></FooterAuth>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import { FormControl } from \"@chakra-ui/form-control\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport \"./styles.css\";\r\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\r\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\r\nimport ScrollableChat from \"./ScrollableChat\";\r\nimport Lottie from \"react-lottie\";\r\nimport animationData from \"../animations/typing.json\";\r\n\r\nimport io from \"socket.io-client\";\r\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nconst ENDPOINT = \"http://localhost:5000\"; // \"https://talk-a-tive.herokuapp.com\"; -> After deployment\r\nvar socket, selectedChatCompare;\r\n\r\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [socketConnected, setSocketConnected] = useState(false);\r\n  const [typing, setTyping] = useState(false);\r\n  const [istyping, setIsTyping] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animationData,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  };\r\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\r\n    ChatState();\r\n\r\n  const fetchMessages = async () => {\r\n    if (!selectedChat) return;\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      setLoading(true);\r\n\r\n      const { data } = await axios.get(\r\n        `/api/message/${selectedChat._id}`,\r\n        config\r\n      );\r\n      setMessages(data);\r\n      setLoading(false);\r\n\r\n      socket.emit(\"join chat\", selectedChat._id);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Messages\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const sendMessage = async (event) => {\r\n    if (event.key === \"Enter\" && newMessage) {\r\n      socket.emit(\"stop typing\", selectedChat._id);\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n        setNewMessage(\"\");\r\n        const { data } = await axios.post(\r\n          \"/api/message\",\r\n          {\r\n            content: newMessage,\r\n            chatId: selectedChat,\r\n          },\r\n          config\r\n        );\r\n        socket.emit(\"new message\", data);\r\n        setMessages([...messages, data]);\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error Occured!\",\r\n          description: \"Failed to send the Message\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n    socket.emit(\"setup\", user);\r\n    socket.on(\"connected\", () => setSocketConnected(true));\r\n    socket.on(\"typing\", () => setIsTyping(true));\r\n    socket.on(\"stop typing\", () => setIsTyping(false));\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n\r\n    selectedChatCompare = selectedChat;\r\n    // eslint-disable-next-line\r\n  }, [selectedChat]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message recieved\", (newMessageRecieved) => {\r\n      if (\r\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\r\n        selectedChatCompare._id !== newMessageRecieved.chat._id\r\n      ) {\r\n        if (!notification.includes(newMessageRecieved)) {\r\n          setNotification([newMessageRecieved, ...notification]);\r\n          setFetchAgain(!fetchAgain);\r\n        }\r\n      } else {\r\n        setMessages([...messages, newMessageRecieved]);\r\n      }\r\n    });\r\n  });\r\n\r\n  const typingHandler = (e) => {\r\n    setNewMessage(e.target.value);\r\n\r\n    if (!socketConnected) return;\r\n\r\n    if (!typing) {\r\n      setTyping(true);\r\n      socket.emit(\"typing\", selectedChat._id);\r\n    }\r\n    let lastTypingTime = new Date().getTime();\r\n    var timerLength = 3000;\r\n    setTimeout(() => {\r\n      var timeNow = new Date().getTime();\r\n      var timeDiff = timeNow - lastTypingTime;\r\n      if (timeDiff >= timerLength && typing) {\r\n        socket.emit(\"stop typing\", selectedChat._id);\r\n        setTyping(false);\r\n      }\r\n    }, timerLength);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {selectedChat ? (\r\n        <>\r\n          <Text\r\n            fontSize={{ base: \"28px\", md: \"30px\" }}\r\n            pb={3}\r\n            px={2}\r\n            w=\"100%\"\r\n            fontFamily=\"Work sans\"\r\n            d=\"flex\"\r\n            justifyContent={{ base: \"space-between\" }}\r\n            alignItems=\"center\"\r\n          >\r\n            <IconButton\r\n              d={{ base: \"flex\", md: \"none\" }}\r\n              icon={<ArrowBackIcon />}\r\n              onClick={() => setSelectedChat(\"\")}\r\n            />\r\n            {messages &&\r\n              (!selectedChat.isGroupChat ? (\r\n                <>\r\n                  {getSender(user, selectedChat.users)}\r\n                  <ProfileModal\r\n                    user={getSenderFull(user, selectedChat.users)}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {selectedChat.chatName.toUpperCase()}\r\n                  <UpdateGroupChatModal\r\n                    fetchMessages={fetchMessages}\r\n                    fetchAgain={fetchAgain}\r\n                    setFetchAgain={setFetchAgain}\r\n                  />\r\n                </>\r\n              ))}\r\n          </Text>\r\n          <Box\r\n            d=\"flex\"\r\n            flexDir=\"column\"\r\n            justifyContent=\"flex-end\"\r\n            p={3}\r\n            bg=\"#E8E8E8\"\r\n            w=\"100%\"\r\n            h=\"100%\"\r\n            borderRadius=\"lg\"\r\n            overflowY=\"hidden\"\r\n          >\r\n            {loading ? (\r\n              <Spinner\r\n                size=\"xl\"\r\n                w={20}\r\n                h={20}\r\n                alignSelf=\"center\"\r\n                margin=\"auto\"\r\n              />\r\n            ) : (\r\n              <div className=\"messages\">\r\n                <ScrollableChat messages={messages} />\r\n              </div>\r\n            )}\r\n\r\n            <FormControl\r\n              onKeyDown={sendMessage}\r\n              id=\"first-name\"\r\n              isRequired\r\n              mt={3}\r\n            >\r\n              {istyping ? (\r\n                <div>\r\n                  <Lottie\r\n                    options={defaultOptions}\r\n                    // height={50}\r\n                    width={70}\r\n                    style={{ marginBottom: 15, marginLeft: 0 }}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <Input\r\n                variant=\"filled\"\r\n                bg=\"white\"\r\n                placeholder=\"Enter a message..\"\r\n                borderColor='black' boxShadow='dark-lg'\r\n                value={newMessage}\r\n                onChange={typingHandler}\r\n              />\r\n            </FormControl>\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        // to get socket.io on same page\r\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\r\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\r\n            Click on a user to start chatting\r\n          </Text>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleChat;\r\n","export const isSameSenderMargin = (messages, m, i, userId) => {\r\n  // console.log(i === messages.length - 1);\r\n\r\n  if (\r\n    i < messages.length - 1 &&\r\n    messages[i + 1].sender._id === m.sender._id &&\r\n    messages[i].sender._id !== userId\r\n  )\r\n    return 33;\r\n  else if (\r\n    (i < messages.length - 1 &&\r\n      messages[i + 1].sender._id !== m.sender._id &&\r\n      messages[i].sender._id !== userId) ||\r\n    (i === messages.length - 1 && messages[i].sender._id !== userId)\r\n  )\r\n    return 0;\r\n  else return \"auto\";\r\n};\r\n\r\nexport const isSameSender = (messages, m, i, userId) => {\r\n  return (\r\n    i < messages.length - 1 &&\r\n    (messages[i + 1].sender._id !== m.sender._id ||\r\n      messages[i + 1].sender._id === undefined) &&\r\n    messages[i].sender._id !== userId\r\n  );\r\n};\r\n\r\nexport const isLastMessage = (messages, i, userId) => {\r\n  return (\r\n    i === messages.length - 1 &&\r\n    messages[messages.length - 1].sender._id !== userId &&\r\n    messages[messages.length - 1].sender._id\r\n  );\r\n};\r\n\r\nexport const isSameUser = (messages, m, i) => {\r\n  return i > 0 && messages[i - 1].sender._id === m.sender._id;\r\n};\r\n\r\nexport const getSender = (loggedUser, users) => {\r\n  return users[0]?._id === loggedUser?._id ? users[1].name : users[0].name;\r\n};\r\n\r\nexport const getSenderFull = (loggedUser, users) => {\r\n  return users[0]._id === loggedUser._id ? users[1] : users[0];\r\n};\r\n","import { ViewIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n  IconButton,\r\n  Text,\r\n  Image,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst ProfileModal = ({ user, children }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  return (\r\n    <>\r\n      {children ? (\r\n        <span onClick={onOpen}>{children}</span>\r\n      ) : (\r\n        <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\r\n      )}\r\n      <Modal size=\"lg\" onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent h=\"410px\">\r\n          <ModalHeader\r\n            fontSize=\"40px\"\r\n            fontFamily=\"Work sans\"\r\n            d=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            {user.name}\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody\r\n            d=\"flex\"\r\n            flexDir=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Image\r\n              borderRadius=\"full\"\r\n              boxSize=\"150px\"\r\n              src={user.pic}\r\n              alt={user.name}\r\n            />\r\n            <Text\r\n              fontSize={{ base: \"28px\", md: \"30px\" }}\r\n              fontFamily=\"Work sans\"\r\n            >\r\n              Email: {user.email}\r\n            </Text>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick={onClose}>Close</Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileModal;\r\n","import { Avatar } from \"@chakra-ui/avatar\";\r\nimport { Tooltip } from \"@chakra-ui/tooltip\";\r\nimport ScrollableFeed from \"react-scrollable-feed\";\r\nimport {\r\n  isLastMessage,\r\n  isSameSender,\r\n  isSameSenderMargin,\r\n  isSameUser,\r\n} from \"../config/ChatLogics\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst ScrollableChat = ({ messages }) => {\r\n  const { user } = ChatState();\r\n\r\n  return (\r\n    <ScrollableFeed>\r\n      {messages &&\r\n        messages.map((m, i) => (\r\n          <div style={{ display: \"flex\" }} key={m._id}>\r\n            {(isSameSender(messages, m, i, user._id) ||\r\n              isLastMessage(messages, i, user._id)) && (\r\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\r\n                <Avatar\r\n                  mt=\"7px\"\r\n                  mr={1}\r\n                  size=\"sm\"\r\n                  cursor=\"pointer\"\r\n                  name={m.sender.name}\r\n                  src={m.sender.pic}\r\n                />\r\n              </Tooltip>\r\n            )}\r\n            <span\r\n              style={{\r\n                backgroundColor: `${\r\n                  m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\r\n                }`,\r\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\r\n                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\r\n                borderRadius: \"20px\",\r\n                padding: \"5px 15px\",\r\n                maxWidth: \"75%\",\r\n              }}\r\n            >\r\n              {m.content}\r\n            </span>\r\n          </div>\r\n        ))}\r\n    </ScrollableFeed>\r\n  );\r\n};\r\n\r\nexport default ScrollableChat;\r\n","import { CloseIcon } from \"@chakra-ui/icons\";\r\nimport { Badge } from \"@chakra-ui/layout\";\r\n\r\nconst UserBadgeItem = ({ user, handleFunction, admin }) => {\r\n  return (\r\n    <Badge\r\n      px={2}\r\n      py={1}\r\n      borderRadius=\"lg\"\r\n      m={1}\r\n      mb={2}\r\n      variant=\"solid\"\r\n      fontSize={12}\r\n      colorScheme=\"purple\"\r\n      cursor=\"pointer\"\r\n      onClick={handleFunction}\r\n    >\r\n      {user.name}\r\n      {admin === user._id && <span> (Admin)</span>}\r\n      <CloseIcon pl={1} />\r\n    </Badge>\r\n  );\r\n};\r\n\r\nexport default UserBadgeItem;\r\n","import { Avatar } from \"@chakra-ui/avatar\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\n\r\nconst UserListItem = ({ handleFunction }) => {\r\n  const { user } = ChatState();\r\n\r\n  return (\r\n    <Box\r\n      onClick={handleFunction}\r\n      cursor=\"pointer\"\r\n      bg=\"#E8E8E8\"\r\n      _hover={{\r\n        background: \"#38B2AC\",\r\n        color: \"white\",\r\n      }}\r\n      w=\"100%\"\r\n      d=\"flex\"\r\n      alignItems=\"center\"\r\n      color=\"black\"\r\n      px={3}\r\n      py={2}\r\n      mb={2}\r\n      borderRadius=\"lg\"\r\n    >\r\n      <Avatar\r\n        mr={2}\r\n        size=\"sm\"\r\n        cursor=\"pointer\"\r\n        name={user.name}\r\n        src={user.pic}\r\n      />\r\n      <Box>\r\n        <Text>{user.name}</Text>\r\n        <Text fontSize=\"xs\">\r\n          <b>Email : </b>\r\n          {user.email}\r\n        </Text>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserListItem;\r\n","import { ViewIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n  FormControl,\r\n  Input,\r\n  useToast,\r\n  Box,\r\n  IconButton,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\r\nimport UserListItem from \"../userAvatar/UserListItem\";\r\n\r\nconst UpdateGroupChatModal = ({ fetchMessages, fetchAgain, setFetchAgain }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [groupChatName, setGroupChatName] = useState();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [renameloading, setRenameLoading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const { selectedChat, setSelectedChat, user } = ChatState();\r\n\r\n  const handleSearch = async (query) => {\r\n    setSearch(query);\r\n    if (!query) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n      console.log(data);\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRename = async () => {\r\n    if (!groupChatName) return;\r\n\r\n    try {\r\n      setRenameLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `/api/chat/rename`,\r\n        {\r\n          chatId: selectedChat._id,\r\n          chatName: groupChatName,\r\n        },\r\n        config\r\n      );\r\n\r\n      console.log(data._id);\r\n      // setSelectedChat(\"\");\r\n      setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      setRenameLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setRenameLoading(false);\r\n    }\r\n    setGroupChatName(\"\");\r\n  };\r\n\r\n  const handleAddUser = async (user1) => {\r\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\r\n      toast({\r\n        title: \"User Already in group!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (selectedChat.groupAdmin._id !== user._id) {\r\n      toast({\r\n        title: \"Only admins can add someone!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `/api/chat/groupadd`,\r\n        {\r\n          chatId: selectedChat._id,\r\n          userId: user1._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n    setGroupChatName(\"\");\r\n  };\r\n\r\n  const handleRemove = async (user1) => {\r\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\r\n      toast({\r\n        title: \"Only admins can remove someone!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `/api/chat/groupremove`,\r\n        {\r\n          chatId: selectedChat._id,\r\n          userId: user1._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      fetchMessages();\r\n      setLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n    setGroupChatName(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\r\n\r\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader\r\n            fontSize=\"35px\"\r\n            fontFamily=\"Work sans\"\r\n            d=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            {selectedChat.chatName}\r\n          </ModalHeader>\r\n\r\n          <ModalCloseButton />\r\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\r\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\" pb={3}>\r\n              {selectedChat.users.map((u) => (\r\n                <UserBadgeItem\r\n                  key={u._id}\r\n                  user={u}\r\n                  admin={selectedChat.groupAdmin}\r\n                  handleFunction={() => handleRemove(u)}\r\n                />\r\n              ))}\r\n            </Box>\r\n            <FormControl d=\"flex\">\r\n              <Input\r\n                placeholder=\"Chat Name\"\r\n                mb={3}\r\n                value={groupChatName}\r\n                onChange={(e) => setGroupChatName(e.target.value)}\r\n              />\r\n              <Button\r\n                variant=\"solid\"\r\n                colorScheme=\"teal\"\r\n                ml={1}\r\n                isLoading={renameloading}\r\n                onClick={handleRename}\r\n              >\r\n                Update\r\n              </Button>\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Add User to group\"\r\n                mb={1}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n            </FormControl>\r\n\r\n            {loading ? (\r\n              <Spinner size=\"lg\" />\r\n            ) : (\r\n              searchResult?.map((user) => (\r\n                <UserListItem\r\n                  key={user._id}\r\n                  user={user}\r\n                  handleFunction={() => handleAddUser(user)}\r\n                />\r\n              ))\r\n            )}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\r\n              Leave Group\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateGroupChatModal;\r\n","import { Box } from \"@chakra-ui/layout\";\r\nimport \"./styles.css\";\r\nimport SingleChat from \"./SingleChat\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst Chatbox = ({ fetchAgain, setFetchAgain }) => {\r\n  const { selectedChat } = ChatState();\r\n\r\n  return (\r\n    <Box\r\n      d={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\r\n      alignItems=\"center\"\r\n      flexDir=\"column\"\r\n      p={3}\r\n      w={{ base: \"100%\", md: \"68%\" }}\r\n      borderColor='black' boxShadow='dark-lg'\r\n    >\r\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chatbox;\r\n","import { Stack } from \"@chakra-ui/layout\";\r\nimport { Skeleton } from \"@chakra-ui/skeleton\";\r\n\r\nconst ChatLoading = () => {\r\n  return (\r\n    <Stack>\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default ChatLoading;\r\n","import {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n  FormControl,\r\n  Input,\r\n  useToast,\r\n  Box,\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\r\nimport UserListItem from \"../userAvatar/UserListItem\";\r\n\r\nconst GroupChatModal = ({ children }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [groupChatName, setGroupChatName] = useState();\r\n  const [selectedUsers, setSelectedUsers] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const { user, chats, setChats } = ChatState();\r\n\r\n  const handleGroup = (userToAdd) => {\r\n    if (selectedUsers.includes(userToAdd)) {\r\n      toast({\r\n        title: \"User already added\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    setSelectedUsers([...selectedUsers, userToAdd]);\r\n  };\r\n\r\n  const handleSearch = async (query) => {\r\n    setSearch(query);\r\n    if (!query) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n      console.log(data);\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (delUser) => {\r\n    setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!groupChatName || !selectedUsers) {\r\n      toast({\r\n        title: \"Please fill all the feilds\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        `/api/chat/group`,\r\n        {\r\n          name: groupChatName,\r\n          users: JSON.stringify(selectedUsers.map((u) => u._id)),\r\n        },\r\n        config\r\n      );\r\n      setChats([data, ...chats]);\r\n      onClose();\r\n      toast({\r\n        title: \"New Group Chat Created!\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Failed to Create the Chat!\",\r\n        description: error.response.data,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <span onClick={onOpen}>{children}</span>\r\n\r\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader\r\n            fontSize=\"35px\"\r\n            fontFamily=\"Work sans\"\r\n            d=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            Create Group Chat\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Chat Name\"\r\n                mb={3}\r\n                onChange={(e) => setGroupChatName(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Add Users eg: John, Piyush, Jane\"\r\n                mb={1}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\">\r\n              {selectedUsers.map((u) => (\r\n                <UserBadgeItem\r\n                  key={u._id}\r\n                  user={u}\r\n                  handleFunction={() => handleDelete(u)}\r\n                />\r\n              ))}\r\n            </Box>\r\n            {loading ? (\r\n              // <ChatLoading />\r\n              <div>Loading...</div>\r\n            ) : (\r\n              searchResult\r\n                ?.slice(0, 4)\r\n                .map((user) => (\r\n                  <UserListItem\r\n                    key={user._id}\r\n                    user={user}\r\n                    handleFunction={() => handleGroup(user)}\r\n                  />\r\n                ))\r\n            )}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick={handleSubmit} colorScheme=\"blue\">\r\n              Create Chat\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GroupChatModal;\r\n","import { AddIcon } from \"@chakra-ui/icons\";\r\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getSender } from \"../config/ChatLogics\";\r\nimport ChatLoading from \"./ChatLoading\";\r\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\r\nimport { Button } from \"@chakra-ui/react\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst MyChats = ({ fetchAgain }) => {\r\n  const [loggedUser, setLoggedUser] = useState();\r\n\r\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\r\n\r\n  const toast = useToast();\r\n\r\n  const fetchChats = async () => {\r\n    // console.log(user._id);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\"/api/chat\", config);\r\n      setChats(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the chats\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n    fetchChats();\r\n    // eslint-disable-next-line\r\n  }, [fetchAgain]);\r\n\r\n  return (\r\n    <Box\r\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\r\n      flexDir=\"column\"\r\n      alignItems=\"center\"\r\n      p={3}\r\n      bgColor={'black'} textColor={'white'}\r\n      w={{ base: \"100%\", md: \"31%\" }}\r\n      borderRadius=\"lg\"\r\n      borderWidth=\"1px\"\r\n    >\r\n      <Box\r\n        pb={3}\r\n        px={3}\r\n        fontSize={{ base: \"28px\", md: \"30px\" }}\r\n        fontFamily=\"Work sans\"\r\n        d=\"flex\"\r\n        w=\"100%\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        My Chats\r\n        <GroupChatModal>\r\n          <Button\r\n            bgColor={'white'} textColor={'black'}\r\n            d=\"flex\"\r\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\r\n            rightIcon={<AddIcon />}\r\n          >\r\n            New Group Chat\r\n          </Button>\r\n        </GroupChatModal>\r\n      </Box>\r\n      <Box\r\n        d=\"flex\"\r\n        flexDir=\"column\"\r\n        p={3}\r\n        bg=\"#F8F8F8\"\r\n        w=\"100%\"\r\n        h=\"100%\"\r\n        borderRadius=\"lg\"\r\n        overflowY=\"hidden\"\r\n      >\r\n        {chats ? (\r\n          <Stack overflowY=\"scroll\">\r\n            {chats.map((chat) => (\r\n              <Box\r\n                onClick={() => setSelectedChat(chat)}\r\n                cursor=\"pointer\"\r\n                bg={selectedChat === chat ? \"black\" : \"grey\"}\r\n                color={selectedChat === chat ? \"white\" : \"black\"}\r\n                borderRadius=\"md\"\r\n                borderColor={selectedChat === chat ? \"black\" : \"red\"}\r\n                px={3}\r\n                py={2}\r\n                key={chat._id}\r\n              >\r\n                <Text>\r\n                  {!chat.isGroupChat\r\n                    ? getSender(loggedUser, chat.users)\r\n                    : chat.chatName}\r\n                </Text>\r\n                {chat.latestMessage && (\r\n                  <Text fontSize=\"xs\">\r\n                    <b>{chat.latestMessage.sender.name} : </b>\r\n                    {chat.latestMessage.content.length > 50\r\n                      ? chat.latestMessage.content.substring(0, 51) + \"...\"\r\n                      : chat.latestMessage.content}\r\n                  </Text>\r\n                )}\r\n              </Box>\r\n            ))}\r\n          </Stack>\r\n        ) : (\r\n          <ChatLoading />\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MyChats;\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport {\r\n  Menu,\r\n  MenuButton,\r\n  MenuDivider,\r\n  MenuItem,\r\n  MenuList,\r\n} from \"@chakra-ui/menu\";\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n} from \"@chakra-ui/modal\";\r\nimport { Tooltip } from \"@chakra-ui/tooltip\";\r\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\r\nimport { Avatar } from \"@chakra-ui/avatar\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport ChatLoading from \"../ChatLoading\";\r\nimport { Spinner } from \"@chakra-ui/spinner\";\r\nimport ProfileModal from \"./ProfileModal\";\r\nimport NotificationBadge from \"react-notification-badge\";\r\nimport { Effect } from \"react-notification-badge\";\r\nimport { getSender } from \"../../config/ChatLogics\";\r\nimport UserListItem from \"../userAvatar/UserListItem\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\n\r\nfunction SideDrawer() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingChat, setLoadingChat] = useState(false);\r\n\r\n  const {\r\n    setSelectedChat,\r\n    user,\r\n    notification,\r\n    setNotification,\r\n    chats,\r\n    setChats,\r\n  } = ChatState();\r\n\r\n  const toast = useToast();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const history = useHistory();\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    if (!search) {\r\n      toast({\r\n        title: \"Please Enter something in search\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top-left\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const accessChat = async (userId) => {\r\n    console.log(userId);\r\n\r\n    try {\r\n      setLoadingChat(true);\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\r\n\r\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\r\n      setSelectedChat(data);\r\n      setLoadingChat(false);\r\n      onClose();\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error fetching the chat\",\r\n        description: error.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        d=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        bgColor={'black'} textColor={'white'}\r\n        w=\"100%\"\r\n        p=\"5px 10px 5px 10px\"\r\n        borderWidth=\"5px\"\r\n      >\r\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\r\n          <Button variant=\"ghost\" onClick={onOpen}  bgColor={'white'} textColor={'black'}>\r\n            <i className=\"fas fa-search\"></i>\r\n            <Text d={{ base: \"none\", md: \"flex\" }} px={4}>\r\n              Search User\r\n            </Text>\r\n          </Button>\r\n        </Tooltip>\r\n        <Text fontSize=\"2xl\" fontFamily=\"Work sans\">\r\n          ChatUtopia\r\n        </Text>\r\n        <div>\r\n          <Menu>\r\n            <MenuButton p={1}>\r\n\r\n              <NotificationBadge\r\n                count={notification.length}\r\n                effect={Effect.SCALE}\r\n              />\r\n              <BellIcon fontSize=\"2xl\" m={1} />\r\n            </MenuButton>\r\n            <MenuList pl={2}>\r\n              {!notification.length && \"No New Messages\"}\r\n              {notification.map((notif) => (\r\n                <MenuItem\r\n                  key={notif._id}\r\n                  onClick={() => {\r\n                    setSelectedChat(notif.chat);\r\n                    setNotification(notification.filter((n) => n !== notif));\r\n                  }}\r\n                >\r\n                  {notif.chat.isGroupChat\r\n                    ? `New Message in ${notif.chat.chatName}`\r\n                    : `New Message from ${getSender(user, notif.chat.users)}`}\r\n                </MenuItem>\r\n              ))}\r\n            </MenuList>\r\n          </Menu>\r\n          <Menu>\r\n            <MenuButton as={Button} bgColor={'black'} textColor={'white'} rightIcon={<ChevronDownIcon />}>\r\n              <Avatar\r\n                size=\"sm\"\r\n                cursor=\"pointer\"\r\n                name={user.name}\r\n                src={user.pic}\r\n              />\r\n            </MenuButton>\r\n            <MenuList bgColor={'black'} textColor={'white'}>\r\n              <ProfileModal user={user}>\r\n                <MenuItem _hover={{\r\n                  color: \"Black\",\r\n                }}>My Profile</MenuItem>{\" \"}\r\n              </ProfileModal>\r\n              <MenuDivider />\r\n              <MenuItem onClick={logoutHandler} _hover={{\r\n                color: \"Black\",\r\n              }}>Logout</MenuItem>\r\n            </MenuList>\r\n          </Menu>\r\n        </div>\r\n      </Box>\r\n\r\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\r\n          <DrawerBody>\r\n            <Box d=\"flex\" pb={2}>\r\n              <Input\r\n                placeholder=\"Search by name or email\"\r\n                mr={2}\r\n                value={search}\r\n                onChange={(e) => setSearch(e.target.value)}\r\n              />\r\n              <Button onClick={handleSearch}>Go</Button>\r\n            </Box>\r\n            {loading ? (\r\n              <ChatLoading />\r\n            ) : (\r\n              searchResult?.map((user) => (\r\n                <UserListItem\r\n                  key={user._id}\r\n                  user={user}\r\n                  handleFunction={() => accessChat(user._id)}\r\n                />\r\n              ))\r\n            )}\r\n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SideDrawer;\r\n","import { Box } from \"@chakra-ui/layout\";\r\nimport { useState } from \"react\";\r\nimport Chatbox from \"../components/Chatbox\";\r\nimport MyChats from \"../components/MyChats\";\r\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst Chatpage = () => {\r\n  const [fetchAgain, setFetchAgain] = useState(false);\r\n  const { user } = ChatState();\r\n\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      {user && <SideDrawer />}\r\n      <Box d=\"flex\" justifyContent=\"space-between\" w=\"100%\" h=\"91.5vh\" p=\"10px\">\r\n        {user && <MyChats fetchAgain={fetchAgain} />}\r\n        {user && (\r\n          <Chatbox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain}  />\r\n        )}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatpage;\r\n","import \"./App.css\";\r\nimport Homepage from \"./Pages/Homepage\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Chatpage from \"./Pages/Chatpage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Route path=\"/\" component={Homepage} exact />\r\n      <Route path=\"/chats\" component={Chatpage} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport ChatProvider from \"./Context/ChatProvider\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <ChakraProvider>\r\n    <BrowserRouter>\r\n      <ChatProvider>\r\n        <App />\r\n      </ChatProvider>\r\n    </BrowserRouter>\r\n  </ChakraProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}